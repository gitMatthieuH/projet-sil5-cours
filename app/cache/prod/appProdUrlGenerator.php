<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appProdUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appProdUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    static private $declaredRoutes = array(
        'sil12_vitrine_accueil' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/accueil',    ),  ),  4 =>   array (  ),),
        'sil12_vitrine_mentions' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\DefaultController::mentionsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/mentions',    ),  ),  4 =>   array (  ),),
        'sil12_vitrine_catalogue' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\DefaultController::catalogueAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/catalogue',    ),  ),  4 =>   array (  ),),
        'sil12_vitrine_articlesParCategorie' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\DefaultController::articlesParCategorieAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/category',    ),  ),  4 =>   array (  ),),
        'sil12_vitrine_chapeau' => array (  0 =>   array (    0 => 'id',    1 => 'nb',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\DefaultController::chapeauAction',    'nb' => 1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nb',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/chapeau',    ),  ),  4 =>   array (  ),),
        'sil12_vitrine_myorders' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\DefaultController::myOrdersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),),
        'sil12_vitrine_shareProduct' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\DefaultController::shareProductAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/share',    ),  ),  4 =>   array (  ),),
        'sil12_vitrine_contenuPanier' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\PanierController::contenuPanierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/panier',    ),  ),  4 =>   array (  ),),
        'sil12_vitrine_addProduct' => array (  0 =>   array (    0 => 'id',    1 => 'qte',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\PanierController::addProductAction',    'id' => NULL,    'qte' => 1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'qte',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/panier/add',    ),  ),  4 =>   array (  ),),
        'sil12_vitrine_deleteProduct' => array (  0 =>   array (    0 => 'id',    1 => 'qte',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\PanierController::deleteProductAction',    'id' => NULL,    'qte' => 1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'qte',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/panier/del',    ),  ),  4 =>   array (  ),),
        'sil12_vitrine_removeProduct' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\PanierController::removeProductAction',    'id' => NULL,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/panier',    ),  ),  4 =>   array (  ),),
        'sil12_vitrine_validationPanier' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\PanierController::validationPanierAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/panier/validate',    ),  ),  4 =>   array (  ),),
        'sil12_vitrine_backoffice' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\BackOfficeController::indexAction',    'id' => NULL,    'type' => NULL,    'nb' => 1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backoffice',    ),  ),  4 =>   array (  ),),
        'product' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ProductController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backoffice/product/',    ),  ),  4 =>   array (  ),),
        'product_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ProductController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/product',    ),  ),  4 =>   array (  ),),
        'product_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ProductController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backoffice/product/new',    ),  ),  4 =>   array (  ),),
        'product_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ProductController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backoffice/product/create',    ),  ),  4 =>   array (  ),),
        'product_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ProductController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/product',    ),  ),  4 =>   array (  ),),
        'product_addprom' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ProductController::addpromAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/product_addprom',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/product',    ),  ),  4 =>   array (  ),),
        'product_promadded' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ProductController::promaddedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backoffice/product/product_promadded',    ),  ),  4 =>   array (  ),),
        'product_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ProductController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/product',    ),  ),  4 =>   array (  ),),
        'product_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ProductController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/product',    ),  ),  4 =>   array (  ),),
        'category' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\CategoryController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backoffice/category/',    ),  ),  4 =>   array (  ),),
        'category_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\CategoryController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/category',    ),  ),  4 =>   array (  ),),
        'category_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\CategoryController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backoffice/category/new',    ),  ),  4 =>   array (  ),),
        'category_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\CategoryController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backoffice/category/create',    ),  ),  4 =>   array (  ),),
        'category_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\CategoryController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/category',    ),  ),  4 =>   array (  ),),
        'category_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\CategoryController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/category',    ),  ),  4 =>   array (  ),),
        'category_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\CategoryController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/category',    ),  ),  4 =>   array (  ),),
        'client' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ClientController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backoffice/client/',    ),  ),  4 =>   array (  ),),
        'client_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ClientController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/client',    ),  ),  4 =>   array (  ),),
        'client_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ClientController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backoffice/client/new',    ),  ),  4 =>   array (  ),),
        'client_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ClientController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backoffice/client/create',    ),  ),  4 =>   array (  ),),
        'client_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ClientController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/client',    ),  ),  4 =>   array (  ),),
        'client_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ClientController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/client',    ),  ),  4 =>   array (  ),),
        'client_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ClientController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/client',    ),  ),  4 =>   array (  ),),
        'orderhat' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\OrderhatController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backoffice/orderhat/',    ),  ),  4 =>   array (  ),),
        'orderhat_all' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\OrderhatController::indexAction',    'type' => 'all',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backoffice/orderhat/',    ),  ),  4 =>   array (  ),),
        'orderhat_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\OrderhatController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/orderhat',    ),  ),  4 =>   array (  ),),
        'orderhat_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\OrderhatController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backoffice/orderhat/new',    ),  ),  4 =>   array (  ),),
        'orderhat_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\OrderhatController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/backoffice/orderhat/create',    ),  ),  4 =>   array (  ),),
        'orderhat_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\OrderhatController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/orderhat',    ),  ),  4 =>   array (  ),),
        'orderhat_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\OrderhatController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/orderhat',    ),  ),  4 =>   array (  ),),
        'orderhat_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\OrderhatController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/backoffice/orderhat',    ),  ),  4 =>   array (  ),),
        'sil12_vitrine_auth' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\ClientController::authAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/auth',    ),  ),  4 =>   array (  ),),
        'auth_check' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/auth_check',    ),  ),  4 =>   array (  ),),
        'logout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),),
        'promotion' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\PromotionController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/promotion/',    ),  ),  4 =>   array (  ),),
        'promotion_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\PromotionController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/promotion',    ),  ),  4 =>   array (  ),),
        'promotion_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\PromotionController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/promotion/new',    ),  ),  4 =>   array (  ),),
        'promotion_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\PromotionController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/promotion/create',    ),  ),  4 =>   array (  ),),
        'promotion_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\PromotionController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/promotion',    ),  ),  4 =>   array (  ),),
        'promotion_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\PromotionController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/promotion',    ),  ),  4 =>   array (  ),),
        'promotion_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'sil12\\VitrineBundle\\Controller\\PromotionController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/promotion',    ),  ),  4 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens);
    }
}
